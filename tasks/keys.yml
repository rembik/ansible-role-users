---
# tasks file for user keys

- name: Prepare local SSH key directory
  file:
    path: "{{ users_ssh_key_dir }}"
    state: directory
  when: users_user.generate_ssh_key | default('no') | bool
  delegate_to: localhost
  become: no
  tags: ['users', 'configuration']

- name: Generate SSH key
  command: >
    ssh-keygen -f "{{ users_ssh_key_dir }}/{{ users_user.name }}" -C 'Generated by Ansible'
  args:
    creates: "{{ users_ssh_key_dir }}/{{ users_user.name }}"
  when: users_user.generate_ssh_key | default('no') | bool
  delegate_to: localhost
  become: no
  tags: ['users', 'configuration']

- name: Generate PuTTY SSH key
  shell: >
    ssh-keygen -e -f "{{ users_ssh_key_dir }}/{{ users_user.name }}"
    > "{{ users_ssh_key_dir }}/{{ users_user.name }}.ppk"
  args:
    creates: "{{ users_ssh_key_dir }}/{{ users_user.name }}.ppk"
  when: users_user.generate_ssh_key | default('no') | bool
  delegate_to: localhost
  become: no
  tags: ['users', 'configuration']

- name: Prepare authorized SSH keys
  file:
    state: "{{ item.state }}"
    path: "{{ users_user.home | default('/home/' + users_user.name) }}/{{ item.path }}"
    mode: "{{ item.mode }}"
    owner: "{{ users_user.name }}"
    group: "{{ users_user.group | default(users_user.name if users_group_per_user else users_group) }}"
  with_items:
    - path: .ssh
      state: directory
      mode: "700"
    - path: .ssh/authorized_keys.tmp
      state: touch
      mode: "600"
  changed_when: no
  tags: ['users', 'configuration']

- name: Pre-setup authorized SSH keys
  authorized_key:
    user: "{{ users_user.name }}"
    key: "{{ item }}"
    path: "{{ users_user.home | default('/home/' + users_user.name) }}/.ssh/authorized_keys.tmp"
  with_items: "{{ users_user.ssh_key | default([], true) |
               union([lookup('file', '{{ users_ssh_key_dir }}/{{ users_user.name }}.pub', errors='ignore')]
               if users_user.generate_ssh_key | default('no') | bool else []) }}"
  changed_when: no
  tags: ['users', 'configuration']

- name: Examine authorized SSH keys
  stat:
    path: "{{ item }}"
  with_items:
    - "{{ users_user.home | default('/home/' + users_user.name) }}/.ssh/authorized_keys.tmp"
    - "{{ users_user.home | default('/home/' + users_user.name) }}/.ssh/authorized_keys"
  register: users_user_ssh_keys
  changed_when: no
  tags: ['users', 'configuration']

- name: Setup authorized SSH keys
  command: mv -f authorized_keys.tmp authorized_keys
  args:
    chdir: "{{ users_user.home | default('/home/' + users_user.name) }}/.ssh"
    removes: "{{ users_user.home | default('/home/' + users_user.name) }}/.ssh/authorized_keys.tmp"
  changed_when:
    - users_user_ssh_keys.results[0].stat.checksum | default('') !=
      users_user_ssh_keys.results[1].stat.checksum | default('')
  tags: ['users', 'configuration']

- name: Deploy generated SSH key pair
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - src: "{{ users_ssh_key_dir }}/{{ users_user.name }}"
      dest: "{{ users_user.home | default('/home/' + users_user.name) }}/.ssh/id_rsa"
    - src: "{{ users_ssh_key_dir }}/{{ users_user.name }}.pub"
      dest: "{{ users_user.home | default('/home/' + users_user.name) }}/.ssh/id_rsa.pub"
  when: users_user.generate_ssh_key | default('no') | bool
  become: yes
  become_user: "{{ users_user.name }}"
  tags: ['users', 'configuration']
