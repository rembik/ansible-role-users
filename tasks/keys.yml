---
# tasks file for user keys

- name: Create local SSH key directory
  file:
    path: "{{ users_ssh_key_dir }}"
    state: directory
  when: (item.generate_ssh_key | default(false) | bool)
  delegate_to: localhost
  become: no
  run_once: yes
  tags: ['users','configuration']

- name: Generate SSH key
  shell: "{{ item.shell }}"
  args:
    creates: "{{ item.creates }}"
  with_items:
    - shell: "ssh-keygen -f {{ users_ssh_key_dir }}/{{ users_user.username }} -C 'Generated by Ansible'"
      creates: "{{ users_ssh_key_dir }}/{{ users_user.username }}"
    - shell: "ssh-keygen -y -f {{ users_ssh_key_dir }}/{{ users_user.username }} >
              {{ users_ssh_key_dir }}/{{ users_user.username }}.pub"
      creates: "{{ users_ssh_key_dir }}/{{ users_user.username }}.pub"
    - shell: "ssh-keygen -e -f {{ users_ssh_key_dir }}/{{ users_user.username }} -C 'Generated by Ansible' >
              {{ users_ssh_key_dir }}/{{ users_user.username }}.ppk"
      creates: "{{ users_ssh_key_dir }}/{{ users_user.username }}.ppk"
  when: (item.generate_ssh_key | default(false) | bool)
  delegate_to: localhost
  become: no
  run_once: yes
  tags: ['users','configuration']

- name: Copy generated SSH key pair
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - src: "{{ users_ssh_key_dir }}/{{ users_user.username }}"
      dest: "{{ users_user.home | default('/home/' + users_user.username) }}/.ssh/id_rsa"
    - src: "{{ users_ssh_key_dir }}/{{ users_user.username }}.pub"
      dest: "{{ users_user.home | default('/home/' + users_user.username) }}/.ssh/id_rsa.pub"
  when: (item.generate_ssh_key | default(false) | bool)
  become: yes
  become_user: "{{ users_user.username }}"
  tags: ['users','configuration']

- name: Pre-setup authorized SSH keys
  authorized_key:
    user: "{{ users_user.username }}"
    key: "{{ item }}"
    path: "{{ users_user.home | default('/home/' + users_user.username) }}/.ssh/authorized_keys.tmp"
  with_items: "{{ users_user.ssh_key | default([], true) |
               union([lookup('file', '{{ users_ssh_key_dir }}/{{ users_user.username }}.pub', errors='ignore')]
               if (item.generate_ssh_key | default(false) | bool) else []) }}"
  changed_when: no
  tags: ['users','configuration']

- name: Stat authorized SSH keys
  stat:
    path: "{{ item }}"
  with_items:
    - "{{ users_user.home | default('/home/' + users_user.username) }}/.ssh/authorized_keys.tmp"
    - "{{ users_user.home | default('/home/' + users_user.username) }}/.ssh/authorized_keys"
  register: users_user_ssh_keys
  changed_when: no
  tags: ['users','configuration']

- name: Setup authorized SSH keys
  command: mv -f authorized_keys.tmp authorized_keys
  args:
    chdir: "{{ users_user.home | default('/home/' + users_user.username) }}/.ssh"
    removes: "{{ users_user.home | default('/home/' + users_user.username) }}/.ssh/authorized_keys.tmp"
  changed_when: users_user_ssh_keys.results[0].stat.checksum != users_user_ssh_keys.results[1].stat.checksum
  tags: ['users','configuration']
