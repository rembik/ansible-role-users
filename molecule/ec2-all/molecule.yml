---
dependency:
  name: galaxy
  options:
    role-file: requirements.yml
driver:
  name: ec2
lint:
  name: yamllint
  options:
    config-file: molecule/.yamllint
platforms:
  # https://docs.aws.amazon.com/en_us/AWSEC2/latest/UserGuide/finding-an-ami.html
  - name: instance-ec2-amazon-linux-2
    image: ami-02ea8f348fa28c108
    instance_type: t2.micro
    vpc_subnet_id: ${MOLECULE_EC2_VPC_SUBNET_ID:-""}
  - name: instance-ec2-centos-latest
    image: ami-dd3c0f36
    instance_type: t2.micro
    vpc_subnet_id: ${MOLECULE_EC2_VPC_SUBNET_ID:-""}
  - name: instance-ec2-debian-latest
    image: ami-0ca467408e84df23c
    instance_type: t2.micro
    vpc_subnet_id: ${MOLECULE_EC2_VPC_SUBNET_ID:-""}
  - name: instance-ec2-fedora-latest
    image: ami-03337e8290f6f0928
    instance_type: t2.micro
    vpc_subnet_id: ${MOLECULE_EC2_VPC_SUBNET_ID:-""}
  - name: instance-ec2-ubuntu-latest
    image: ami-0cf8fa6a01bb07363
    instance_type: t2.micro
    vpc_subnet_id: ${MOLECULE_EC2_VPC_SUBNET_ID:-""}
provisioner:
  name: ansible
  lint:
    name: ansible-lint
  config_options:
    defaults:
      callback_plugins: /usr/lib/python2.7/site-packages/ara/plugins/callbacks
  playbook:
    converge: playbook.yml
  inventory:
    host_vars:
      instance-ec2-centos-latest:
        ansible_user: centos
      instance-ec2-debian-latest:
        ansible_user: debian
      instance-ec2-fedora-latest:
        ansible_user: fedora
      instance-ec2-ubuntu-latest:
        ansible_user: ubuntu
scenario:
  name: ec2-all
verifier:
  name: goss
  directory: ../tests/
  lint:
    name: yamllint
