---
dependency:
  name: galaxy
  options:
    role-file: requirements.yml
driver:
  name: ec2
lint:
  name: yamllint
  options:
    config-file: molecule/.yamllint
platforms:
  # https://docs.aws.amazon.com/en_us/AWSEC2/latest/UserGuide/finding-an-ami.html
  - name: instance-ec2-amazon-linux-2
    image: ami-02ea8f348fa28c108
    instance_type: t2.micro
    vpc_subnet_id: ${MOLECULE_VPC_SUBNET_ID:-""}
  - name: instance-ec2-centos-latest
    image: ami-9a183671
    instance_type: t2.micro
    vpc_subnet_id: ${MOLECULE_VPC_SUBNET_ID:-""}
  - name: instance-ec2-fedora-latest
    image: ami-0f904cfaa69a1c64c
    instance_type: t2.micro
    vpc_subnet_id: ${MOLECULE_VPC_SUBNET_ID:-""}
  - name: instance-ec2-ubuntu-latest
    image: ami-0bdf93799014acdc4
    instance_type: t2.micro
    vpc_subnet_id: ${MOLECULE_VPC_SUBNET_ID:-""}
provisioner:
  name: ansible
  lint:
    name: ansible-lint
  config_options:
    defaults:
      callback_plugins: /usr/lib/python2.7/site-packages/ara/plugins/callbacks
  playbook:
    converge: ${MOLECULE_PLAYBOOK:-../playbook.yml}
  inventory:
    host_vars:
      instance-ec2-ubuntu-latest:
        ansible_user: ubuntu
      instance-ec2-centos-latest:
        ansible_user: centos
      instance-ec2-fedora-latest:
        ansible_user: fedora
scenario:
  name: ec2-all
verifier:
  name: goss
  directory: ${MOLECULE_TESTS:-../tests/}
  lint:
    name: yamllint
